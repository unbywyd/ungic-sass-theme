@use "./meta"as un-meta;
@use "sass:meta";
@use "sass:map";
@use "sass:color";
@use "sass:list";

/*
*   Retrieves configuration from configuration file of active theme by path project/themes/THEME_NAME.css
*   It depends on the chosen theme for rendering
*/
$theme: () !default;

@if list.length(map.keys($theme))==0 {
  @warn "Ungic SASS theme module must be configured before use. Just use this module as `@use 'ungic-theme' with ($theme: meta.module-variables(THEME-CONFIG));`";
}

/*
*   This is if the second run for inversion colors
*/
$inverse-mode: map.get($theme, inverse-mode);

@if not map.has-key($theme, colors) {
  @warn "'colors' are required for ungic SASS theme module!"
}
$colors: map.get($theme, colors);

$palettes: map.get($theme, palettes);
$colors-vars-mode: map.get($theme, colors-vars-mode);

@if not map.has-key($theme, config) {
  @warn "'config' are required for ungic SASS theme module!"
}
$config: map.get($theme, config);


$theme-type: 'light';


@if map.has-key($theme, colors) {
  @if (not map.has-key($colors, extra) and map.has-key($colors, primary) and map.has-key($colors, secondary)) {
    $_primary: map.get($colors, primary);

    @if(type-of($_primary)==list) {
      @if($inverse-mode) {
        $_primary: nth($_primary, 2);
      }

      @else {
        $_primary: nth($_primary, 1);
      }
    }

    $_secondary: map.get($colors, secondary);

    @if(type-of($_secondary)==list) {
      @if($inverse-mode) {
        $_secondary: nth($_secondary, 2);
      }

      @else {
        $_secondary: nth($_secondary, 1);
      }
    }

    $colors: map.merge($colors, (extra: color.mix($_primary, $_secondary))) !global;
  }


  @each $color-name, $_color in $colors {
    $color: $_color;

    @if(type-of($color)==list) {
      $color: nth($_color, 1);

      @if($inverse-mode) {
        $color: nth($_color, 2);
      }
    }

    $colors: map.merge($colors, (#{$color-name}: $color)) !global;
  }

  @if(un-meta.is-darker(map.get($colors, 'background-color'), map.get($colors, 'text-color'))) {
    $theme-type: 'dark' !global;
  }
}